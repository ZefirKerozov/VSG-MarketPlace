@use 'global';
@use 'header';
@use 'navigation';

@import url('https://fonts.googleapis.com/css2?family=Montserrat&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Roboto&display=swap');

$background-color: #FFFFFF;

@mixin displayFlex($flexDirection: row) {
    display: flex;
    flex-direction: $flexDirection;
}

@mixin flexProperties($justifyContent: flex-start, $alignItems: flex-start) {
    justify-content: $justifyContent;
    align-items: $alignItems;
}

@mixin popUpPointerPosition($top, $left, $degrees) {
    content: '';
    position: absolute;
    top: $top;
    left: $left;
    width: 0px;
    height: 0px;
    border-style: solid;
    border-width: 0 10px 10px 10px;
    border-color: transparent transparent #FFFFFF transparent;
    transform: rotate($degrees);
}

@mixin popUpButton($backgroundColor, $textColor) {
    @include displayFlex();
    @include flexProperties(center, center);
    width: 57px;
    height: 22px;
    box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.5);
    border-radius: 4px;
    background-color: $backgroundColor;
    text-decoration: none;
    font-size: 14px;
    color: $textColor;
}

// * {
//     margin: 0;
//     padding: 0;
//     border: none;
// }

// html {
//     font-size: 30px;
// }

//// Body and main container styles ////

body {
    height: 100vh;
    background-color: #F0F2F3;
    font-family: 'Roboto', sans-serif;
    overflow: hidden;
}

#main-container {
    @include displayFlex();
    height: calc(100% - 110px);
    gap: 30px;
    padding: 30px 20px;
}

//// Header styles ////

// header {
//     @include displayFlex();
//     @include flexProperties(space-between, center);
//     width: 100%;
//     height: 50px;
//     background-color: $background-color;
//     padding: 10px 10px;
//     font-family: 'Montserrat', sans-serif;
//     box-sizing: border-box;

//     #title {
//         font-size: 1rem;
//     }

//     svg {
//         width: 30px;
//         height: 30px;
//     }

//     svg:last-of-type {
//         display: none
//     }

//     #user-info {
//         @include displayFlex();
//         @include flexProperties(flex-start, center);
//         gap: 10px;
//         font-size: 0.5rem;
//     }
// }

//// Navigation styles ////

// aside {
//     height: 100%;
//     width: 20%;
// }

// nav {
//     height: 100%;
//     background-color: $background-color;
//     padding: 39px 18px;
//     border-radius: 20px;
//     box-sizing: border-box;

//     ul {
//         @include displayFlex(column);
//         gap: 10px;
//         list-style-type: none;
//         height: 100%;
//     }

//     li {
//         border-radius: 10px;

//         a {
//             display: block;
//             text-decoration: none;
//             color: #000000;
//             padding: 15px 17px;
//             border-radius: 10px;
//             font-size: 0.5rem;
//         }

//         svg {
//             margin-right: 5px;
//         }

//         .active {
//             background-color: #ED1C25;
//             color: #FFFFFF;
//             box-shadow: 2px 2px 10px rgba(0, 0, 0, 0.2);

//             svg path {
//                 fill: #FFFFFF;
//             }
//         }
//     }

//     li:last-of-type {
//         margin-top: auto;
//     }

//     li:hover {
//         background-color: #ED1C25;
//         cursor: pointer;

//         a {
//             color: #FFFFFF;
//         }

//         svg path {
//             fill: #FFFFFF;
//         }
//     }
// }

//// Items section styles ////

main {
    @include displayFlex();
    background-color: $background-color;
    border-radius: 20px;
    width: 80%;
    height: 100%;
    gap: 30px;

    .items {
        @include displayFlex();
        padding: 20px 0;
        flex-wrap: wrap;
        align-content: flex-start;
        overflow-y: scroll;

        /* Hide the scrollbar for Internet Explorer, Edge and Firefox */
        -ms-overflow-style: none;
        /* Internet Explorer and Edge */
        scrollbar-width: none;
        /* Firefox */

        /* Hide the scrollbar for Chrome, Safari and Opera */
        &::-webkit-scrollbar {
            display: none;
        }
    }
}

//// Single item card styles ////

.item-wrapper {
    box-sizing: border-box;
    min-width: 25%;
    padding: 20px;
}

.item-card {
    @include displayFlex(column);
    position: relative;
    height: 100%;
    box-shadow: 2px 2px 10px rgba(0, 0, 0, 0.2);
    border-radius: 10px;

    // Card item image styles

    .img-wrapper {
        height: 70%;
        overflow: hidden;
    }

    img {
        width: 100%;
        height: 100%;
        border-radius: 10px 10px 0 0;
        transition: 0.5s;
        overflow: hidden;
    }

    img:hover {
        transform: scale(1.2);
        cursor: pointer;
    }

    // Card item price and category styles

    .item-info {
        @include displayFlex();
        @include flexProperties(space-between, center);
        height: 30%;
        padding: 0 15px;

        .price-category {
            @include displayFlex(column);
            @include flexProperties(space-evenly);
            width: 80%;
        }

        .item-price {
            font-size: 0.7rem;
        }

        .item-category {
            font-size: 0.5rem;
            color: #9A9A9A;
        }
    }

    // Card item quantity styles

    .quantity-wrapper {
        @include displayFlex();
        @include flexProperties(flex-end, center);
        gap: 10px;
        width: 50%;

        .quantity {
            @include displayFlex(column);
            gap: 5px;
            border-bottom: 2px solid #000000;

            label {
                font-size: 0.3rem;
                color: #B3B3B3;
            }
        }

        button {
            @include displayFlex();
            position: relative;
            border: none;
            cursor: pointer;
            background-color: #ED1C25;
            border-radius: 50px;
            padding: 7px;
        }

        svg {
            height: 1rem;
            width: 1rem;
        }

        button>svg {
            pointer-events: none;
        }
    }
}

//// Pop up styles ////

#pop-up {
    @include displayFlex(column);
    @include flexProperties(space-between, flex-end);
    position: absolute;
    visibility: hidden;
    z-index: 1;
    width: 300px;
    height: 80px;
    background-color: $background-color;
    box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.5);
    border-radius: 4px;
    padding: 16px;
    font-size: 0.5rem;

    p {
        display: inline;
        text-align: left;
    }

    // Pop up buttons styles

    .pop-up-buttons {
        @include displayFlex();
        @include flexProperties(flex-end);
        gap: 20px;

        #confirm-btn {
            @include popUpButton(#ED1C25, #FFFFFF);
        }

        #cancel-btn {
            @include popUpButton(#FFFFFF, #ED1C25);
        }
    }
}

//// Pop up pointer (arrow) styles ////

.top-middle-pointer::before {
    @include popUpPointerPosition(-10px, 155px, 0deg);
}

.top-right-pointer::before {
    @include popUpPointerPosition(-10px, 280px, 0deg);
}

.bottom-middle-pointer::before {
    @include popUpPointerPosition(112px, 155px, 180deg);
}

.bottom-right-pointer::before {
    @include popUpPointerPosition(112px, 280px, 180deg);
}

//// Modal styles ////

#description-modal {
    position: relative;
    width: 550px;
    height: 600px;
    background-color: $background-color;
    border-radius: 20px;
    overflow: hidden;

    p {
        font-size: 0.5rem;
    }

    // Modal item image styles

    img {
        width: 100%;
        height: 50%;
    }

    // Modal item description styles

    .item-description {
        @include displayFlex(column);
        padding: 20px;
        gap: 20px;

        .top {
            @include displayFlex();
            @include flexProperties(space-between);
        }

        // Modal item title and category styles

        .title-category {
            @include displayFlex(column);
            gap: 10px;
            width: 70%;

            .title {
                font-size: 0.7rem;
                font-weight: 700;
            }

            .category {
                font-size: 0.5rem;
                color: #9A9A9A;
            }
        }

        // Modal item price and quantity styles

        .price-quantity {
            @include displayFlex(column);
            gap: 10px;

            .price {
                font-size: 0.7rem;
                font-weight: 700;
            }

            .quantity {
                font-size: 0.5rem;
                color: #9A9A9A;
            }
        }
    }

    // Modal close button styles

    .close-btn {
        position: absolute;
        top: 0;
        right: 0;
        margin: 26px;
        background: none;
    }

    .close-btn:hover {
        cursor: pointer;
    }
}

//// Modal overlay styles ////

.overlay {
    @include flexProperties(center, center);
    position: fixed;
    display: none;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgb(0, 0, 0, 0.5);
}

@media (max-width: 768px) {
    header {
        svg:last-of-type {
            display: block;
        }
    }

    #user-info {
        @include displayFlex(row-reverse);
        @include flexProperties(flex-start, center);
        position: absolute;
        gap: 10px;
        font-size: 0.5rem;
        top: 20px;
        left: 70px;
        transform: translate(-50%, 0);
    }

    nav {
        border-radius: 0;
        padding-top: 70px;
        padding-bottom: 70px;
    }

    aside {
        position: fixed;
        left: -100%;
        top: 50px;
        min-width: 100%;
        z-index: 1;
        transition: 0.3s;
    }

    aside.active {
        left: 0;
    }

    main {
        width: 100%;
    }

    .item-wrapper {
        min-width: 100%;
    }

    #description-modal {
        width: calc(100vw - 40px);
        height: calc(100vh - 40px);

        img {
            height: 35%;
        }

        .item-description {
            overflow: scroll;

            .top {
                @include displayFlex(column);
                gap: 20px;
            }
        }
    }
}

@media (max-width: 1366px) {
    .item-wrapper {
        width: 50%;
    }

    aside {
        width: 30%;
    }
}